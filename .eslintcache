[{"C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\vsl-react\\src\\App.js":"1","C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\vsl-react\\src\\index.js":"2","C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\Profile-Github\\src\\index.js":"3","C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\Profile-Github\\src\\App.js":"4"},{"size":1849,"mtime":1608576042135,"results":"5","hashOfConfig":"6"},{"size":310,"mtime":1608572610677,"results":"7","hashOfConfig":"6"},{"size":243,"mtime":1608843531943,"results":"8","hashOfConfig":"9"},{"size":3193,"mtime":1623542491339,"results":"10","hashOfConfig":"11"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dyf3wt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jgc7d",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1ogsdop","C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\vsl-react\\src\\App.js",[],"C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\vsl-react\\src\\index.js",[],"C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\Profile-Github\\src\\index.js",[],"C:\\Users\\italo\\OneDrive\\Área de Trabalho\\Projeto-Github\\Profile-Github\\src\\App.js",["21"],"import React, { useState } from 'react';\nimport GithubImage from './img/github-icon.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [search,setSearch] = useState('');\n  const [userData,setUserData] = useState();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`https://api.github.com/users/${search}`)\n      .then(response => response.json())\n      .then(userResponse => setUserData(userResponse));\n  }\n\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n  }\n\n\n  return (\n    <div className=\"container text-center\">\n      <h1 id=\"title\" className=\"py-5 text-uppercase\">\n        perfil do github\n      </h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <div className=\"input-group\">\n            <input type=\"text\" placeholder=\"Digite o perfil do github desejado...\" value={search} onChange={handleChange} require/>\n\n           <span className=\"input-group-btn\">\n             <button type=\"submit\" id=\"btn-procurar\">\n               Procurar\n             </button>\n           </span>\n          </div>\n        </div>\n      </form>\n      \n      <div className=\"py-5\">\n        \n        {!userData && (\n           <div className=\"container-profile\">\n              <div className=\"profile-img\">\n                <img src={GithubImage}  alt=\"logo\" height=\"200px\"/>\n    \n                <div className=\"followed\"> \n                  <div className=\"followed-profile\">\n                    <p>Followers</p>\n                    <p>0</p>\n                  </div>\n    \n                  <div className=\"followed-profile\">\n                    <p>Following </p>\n                    <p>0</p>\n                  </div>\n                </div>\n              </div>\n              <h1 className=\"pt-3\">\n                <a  target=\"_new\">\n                  GitHub\n                </a>\n              </h1>\n              <h3>\n                GitHub\n              </h3>\n\n              <p id=\"camp-bio\" className=\"text-info\">\n                GitHub\n              </p>\n\n           </div>\n        )}\n\n        {userData &&(\n          <div className=\"container-profile\">\n            <div className=\"profile-img\">\n              <img src={userData.avatar_url}  alt=\"logo\" height=\"200px\"/>\n\n              <div className=\"followed\"> \n                <div className=\"followed-profile\">\n                  <p>Followers</p>\n                  <p>{userData.followers}</p>\n                </div>\n\n                <div className=\"followed-profile\">\n                  <p>Following </p>\n                  <p>{userData.following}</p>\n                </div>\n              </div>\n            </div>\n           \n            <h1 className=\"pt-3\">\n              <a href={userData.html_url} target=\"_new\">\n                {userData.name}\n              </a>\n            </h1>\n            <h3>\n              {userData.location}\n            </h3>\n\n            <p id=\"camp-bio\" className=\"text-info\">\n              {userData.bio}\n            </p>\n\n            <div className=\"container-repositorios\">\n            {userData.repos_url.name}\n            </div>\n          </div>\n\n          \n\n\n        )}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"22","severity":1,"message":"23","line":61,"column":17,"nodeType":"24","endLine":61,"endColumn":35},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]